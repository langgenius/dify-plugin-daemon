// Code generated by controller generator. DO NOT EDIT.
package server

import (
	"github.com/gin-gonic/gin"
	"github.com/langgenius/dify-plugin-daemon/internal/server/controllers"
	"github.com/langgenius/dify-plugin-daemon/internal/types/app"
)

func (app *App) setupGeneratedRoutes(group *gin.RouterGroup, config *app.Config) {
	group.POST("/tool/invoke", controllers.InvokeTool(config))
	group.POST("/tool/validate_credentials", controllers.ValidateToolCredentials(config))
	group.POST("/tool/get_runtime_parameters", controllers.GetToolRuntimeParameters(config))
	group.POST("/llm/invoke", controllers.InvokeLLM(config))
	group.POST("/llm/num_tokens", controllers.GetLLMNumTokens(config))
	group.POST("/text_embedding/invoke", controllers.InvokeTextEmbedding(config))
	group.POST("/text_embedding/num_tokens", controllers.GetTextEmbeddingNumTokens(config))
	group.POST("/rerank/invoke", controllers.InvokeRerank(config))
	group.POST("/tts/invoke", controllers.InvokeTTS(config))
	group.POST("/tts/model/voices", controllers.GetTTSModelVoices(config))
	group.POST("/speech2text/invoke", controllers.InvokeSpeech2Text(config))
	group.POST("/moderation/invoke", controllers.InvokeModeration(config))
	group.POST("/model/validate_provider_credentials", controllers.ValidateProviderCredentials(config))
	group.POST("/model/validate_model_credentials", controllers.ValidateModelCredentials(config))
	group.POST("/model/schema", controllers.GetAIModelSchema(config))
	group.POST("/oauth/get_authorization_url", controllers.GetAuthorizationURL(config))
	group.POST("/oauth/get_credentials", controllers.GetCredentials(config))
	group.POST("/oauth/refresh_credentials", controllers.RefreshCredentials(config))
	group.POST("/datasource/validate_credentials", controllers.DatasourceValidateCredentials(config))
	group.POST("/datasource/get_website_crawl", controllers.DatasourceGetWebsiteCrawl(config))
	group.POST("/datasource/get_online_document_pages", controllers.DatasourceGetOnlineDocumentPages(config))
	group.POST("/datasource/get_online_document_page_content", controllers.DatasourceGetOnlineDocumentPageContent(config))
	group.POST("/datasource/online_drive_browse_files", controllers.DatasourceOnlineDriveBrowseFiles(config))
	group.POST("/datasource/online_drive_download_file", controllers.DatasourceOnlineDriveDownloadFile(config))
	group.POST("/dynamic_select/fetch_parameter_options", controllers.FetchDynamicParameterOptions(config))
	group.POST("/trigger/invoke", controllers.TriggerInvoke(config))
	group.POST("/trigger/validate_credentials", controllers.TriggerValidateProviderCredentials(config))
	group.POST("/trigger/dispatch_event", controllers.TriggerDispatchEvent(config))
	group.POST("/trigger/subscribe", controllers.TriggerSubscribe(config))
	group.POST("/trigger/unsubscribe", controllers.TriggerUnsubscribe(config))
	group.POST("/trigger/refresh", controllers.TriggerRefresh(config))
}
