// Code generated by controller generator. DO NOT EDIT.

package controllers

import (
	"github.com/gin-gonic/gin"
	"github.com/langgenius/dify-plugin-daemon/internal/service"
	"github.com/langgenius/dify-plugin-daemon/internal/types/app"
	"github.com/langgenius/dify-plugin-daemon/pkg/entities/plugin_entities"
	"github.com/langgenius/dify-plugin-daemon/pkg/entities/requests"
)

func DatasourceValidateCredentials(config *app.Config) gin.HandlerFunc {
	type request = plugin_entities.InvokePluginRequest[requests.RequestValidateDatasourceCredentials]

	return func(c *gin.Context) {
		BindPluginDispatchRequest(
			c,
			func(itr request) {
				service.DatasourceValidateCredentials(&itr, c, config.PluginMaxExecutionTimeout)
			},
		)
	}
}

func DatasourceGetWebsiteCrawl(config *app.Config) gin.HandlerFunc {
	type request = plugin_entities.InvokePluginRequest[requests.RequestDatasourceGetWebsiteCrawl]

	return func(c *gin.Context) {
		BindPluginDispatchRequest(
			c,
			func(itr request) {
				service.DatasourceGetWebsiteCrawl(&itr, c, config.PluginMaxExecutionTimeout)
			},
		)
	}
}

func DatasourceGetOnlineDocumentPages(config *app.Config) gin.HandlerFunc {
	type request = plugin_entities.InvokePluginRequest[requests.RequestDatasourceGetOnlineDocumentPages]

	return func(c *gin.Context) {
		BindPluginDispatchRequest(
			c,
			func(itr request) {
				service.DatasourceGetOnlineDocumentPages(&itr, c, config.PluginMaxExecutionTimeout)
			},
		)
	}
}

func DatasourceGetOnlineDocumentPageContent(config *app.Config) gin.HandlerFunc {
	type request = plugin_entities.InvokePluginRequest[requests.RequestInvokeOnlineDocumentDatasourceGetContent]

	return func(c *gin.Context) {
		BindPluginDispatchRequest(
			c,
			func(itr request) {
				service.DatasourceGetOnlineDocumentPageContent(&itr, c, config.PluginMaxExecutionTimeout)
			},
		)
	}
}

func DatasourceOnlineDriveBrowseFiles(config *app.Config) gin.HandlerFunc {
	type request = plugin_entities.InvokePluginRequest[requests.RequestOnlineDriveBrowseFiles]

	return func(c *gin.Context) {
		BindPluginDispatchRequest(
			c,
			func(itr request) {
				service.DatasourceOnlineDriveBrowseFiles(&itr, c, config.PluginMaxExecutionTimeout)
			},
		)
	}
}

func DatasourceOnlineDriveDownloadFile(config *app.Config) gin.HandlerFunc {
	type request = plugin_entities.InvokePluginRequest[requests.RequestOnlineDriveDownloadFile]

	return func(c *gin.Context) {
		BindPluginDispatchRequest(
			c,
			func(itr request) {
				service.DatasourceOnlineDriveDownloadFile(&itr, c, config.PluginMaxExecutionTimeout)
			},
		)
	}
}
